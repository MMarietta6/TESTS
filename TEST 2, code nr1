//Code written without Ai

#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define MAX_SIZE 100

//Prototypes
double* readArrayFromFile(const char* filename, int* count);
double getXFromKeyboard();
void calculateK(double* A, int n, double* B, int m, double X, double K[], int* kCount);
void writeArrayToFile(double K[], int kCount, const char* filename);

//Main
int main() {
    int N, M, kCount;
    double* A = readArrayFromFile("F1.txt", &N);
    double* B = readArrayFromFile("F2.txt", &M);

    if (A == NULL || B == NULL) {
        if (A != NULL) free(A);
        if (B != NULL) free(B);
        return 1;
    }

    double X = getXFromKeyboard();

    double K[MAX_SIZE];
    calculateK(A, N, B, M, X, K, &kCount);

    writeArrayToFile(K, kCount, "F3.txt");

    free(A);
    free(B);

    return 0;
}
//Function to Read Array from File (Dynamic Memory Allocation)
double* readArrayFromFile(const char* filename, int* count) {
    FILE* file = fopen(filename, "r");
    if (file == NULL) {
        perror("Error opening file");
        return NULL;
    }

    *count = 0;
    double* arr = NULL;
    double num;
    int capacity = 10;
    arr = (double*)malloc(capacity * sizeof(double));

    if (arr == NULL) {
        fclose(file);
        return NULL;
    }

    while (fscanf(file, "%lf", &num) == 1) {
        if (*count >= capacity) {
            capacity *= 2;
            double* temp = (double*)realloc(arr, capacity * sizeof(double));
            if (temp == NULL) {
                fclose(file);
                free(arr);
                return NULL;
            }
            arr = temp;
        }
        arr[(*count)++] = num;
    }

    fclose(file);
    return arr;
}

//Function to Get X from Keyboard
double getXFromKeyboard() {
    double x;
    printf("Enter the value of X: ");
    if (scanf("%lf", &x) != 1) {
        printf("Invalid input for X.\n");
        exit(1);
    }
    return x;
}
//Function to Calculate Array K
void calculateK(double* A, int n, double* B, int m, double X, double K[], int* kCount) {
    *kCount = (n < m) ? n : m;
    K[0] = 1.0;
    for (int i = 1; i < *kCount; ++i) {
        K[i] = K[i - 1] * A[i] * X / (A[i] * A[i] + B[i] * B[i]);
    }
}
//Function to Write Array K to File
void writeArrayToFile(double K[], int kCount, const char* filename) {
    FILE* file = fopen(filename, "w");
    if (file == NULL) {
        perror("Error opening file");
        return;
    }
    for (int i = 0; i < kCount; ++i) {
        fprintf(file, "%lf ", K[i]);
    }
    fclose(file);
}
